// Generated by dts-bundle v0.6.1

export interface AuthenticationAdapterContract<I> {
        /**
            * @returns {Promise<I>}
            */
        refreshIdentity(): Promise<I>;
        /**
            * @param data
            */
        authenticate<T>(data: T): Promise<I>;
        /**
            * @param data
            */
        logout(): Promise<boolean>;
        /**
            * @param identity
            */
        getRole(identity: I): string;
}

export class AuthenticationService<I> {
        protected authenticationAdapter: AuthenticationAdapterContract<I>;
        /**
            * @param authenticationAdapter
            */
        constructor(authenticationAdapter: AuthenticationAdapterContract<I>);
        /**
            * @returns {AuthenticationAdapterContract<I>}
            */
        getAdapter(): AuthenticationAdapterContract<I>;
        /**
            * @returns {boolean}
            */
        hasIdentity(): boolean;
        /**
            * @returns {I}
            */
        getIdentity(): I;
        /**
            * @returns {string}
            */
        getRole(): string;
        /**
            * @returns {Promise<boolean>}
            */
        refreshIdentity(): Promise<boolean>;
        /**
            * @param data
            * @returns {Promise<boolean>}
            */
        authenticate<T>(data?: T): Promise<boolean>;
        /**
            * @returns {Promise<boolean>}
            */
        logout(): Promise<boolean>;
}

