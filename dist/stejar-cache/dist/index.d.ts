// Generated by dts-bundle v0.6.1

export class CacheService {
        protected storeInstance: StoreJSStatic;
        /**
            * @param store
            */
        constructor(storeInstance?: StoreJSStatic);
        /**
            * @type {boolean}
            */
        protected debug: boolean;
        /**
            * @type {boolean}
            */
        protected enabled: boolean;
        /**
            * @returns {boolean}
            */
        canCache(): boolean;
        /**
            * @param args
            */
        protected log(...args: any[]): void;
        /**
            * @param signature
            * @returns {any|null}
            */
        get<T>(signature: string): T;
        /**
            * @returns {void}
            */
        clear(): void;
        /**
            * @returns {boolean}
            */
        debugEnabled(): boolean;
        /**
            * @param tag
            * @returns {Array}
            */
        getByTag(tag: string): any[];
        /**
            * @param tag
            */
        clearByTag(tag: string): void;
        /**
            * @param signature
            */
        remove(signature: string): void;
        /**
            * @param tags
            */
        clearByTags(tags: string[]): void;
        /**
            * @returns {void}
            */
        enableDebug(): void;
        /**
            * @returns {void}
            */
        disable(): void;
        /**
            * @returns {boolean}
            */
        isEnabled(): boolean;
        /**
            * @returns {void}
            */
        enable(): void;
        /**
            * @param name
            * @param value
            * @param expiration
            * @param forcedExpiration
            * @param tags
            */
        set(name: string, value: Object, expiration?: number, forcedExpiration?: number, tags?: string[]): void;
}

export interface CacheAware {
    /**
      * @param cacheService
      */
    setCacheService(cacheService: CacheService): void;
}

