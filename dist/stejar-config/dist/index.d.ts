// Generated by dts-bundle v0.6.1
// Dependencies for this module:
//   ../@stejar/redux

import { Store } from "@stejar/redux";
import { ReducerStore } from "@stejar/redux";

export interface ConfigurationLoaderContract<C> {
    /**
      * @returns {Promise<I>}
      */
    loadConfiguration(environment?: string): Promise<C>;
}

export class ConfigurationService<C> {
        protected store: Store<any>;
        protected configurationLoaderContract: ConfigurationLoaderContract<C>;
        /**
            * @param configurationLoaderContract
            */
        constructor(store: Store<any>, configurationLoaderContract: ConfigurationLoaderContract<C>);
        /**
            * @returns {ConfigurationLoaderContract<C>}
            */
        getLoader(): ConfigurationLoaderContract<C>;
        /**
            * @returns {Promise<boolean>}
            */
        loadConfiguration(env?: string): Promise<boolean>;
}

export class ConfigurationStore<C> extends ReducerStore<{
        ConfigurationStore: C;
}> {
        /**
            * @constructor
            */
        constructor();
        /**
            * @param state
            * @param payload
            * @returns {{}&U&AppConfig}
            */
        protected loadedConfiguration(state: any, payload: LoadedConfigurationAction<C>): any;
        /**
            * @returns {any}
            */
        getConfig(): C;
}

export class LoadedConfigurationAction<C> {
    configuration: C;
    /**
      * @param configuration
      */
    constructor(configuration: C);
}

export class ConfigurationQueries {
    /**
      * @type {Reselect.Selector<TInput, C>}
      */
    static getConfiguration: <C>(state: any, props?: any) => C;
}

